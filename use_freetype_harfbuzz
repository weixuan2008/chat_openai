#include <ft2build.h>
#include FT_FREETYPE_H
#include <hb.h>
#include <hb-ft.h>

// Initialize FreeType library
FT_Library library;
FT_Init_FreeType(&library);

// Load a font face
FT_Face face;
FT_New_Face(library, "font.ttf", 0, &face);

// Set the font size
FT_Set_Pixel_Sizes(face, 0, 64);

// Create a HarfBuzz buffer
hb_buffer_t *buffer = hb_buffer_create();
hb_buffer_add_utf8(buffer, "Hello, world!", -1, 0, -1);
hb_buffer_guess_segment_properties(buffer);

// Shape the text with HarfBuzz
hb_font_t *font = hb_ft_font_create(face, nullptr);
hb_shape(font, buffer, nullptr, 0);

// Get the shaped glyph information
unsigned int count;
hb_glyph_info_t *info = hb_buffer_get_glyph_infos(buffer, &count);
hb_glyph_position_t *pos = hb_buffer_get_glyph_positions(buffer, &count);

// Render the text as a bitmap
int x = 0, y = 0;
for (unsigned int i = 0; i < count; i++) {
    FT_Load_Glyph(face, info[i].codepoint, FT_LOAD_DEFAULT);
    FT_Render_Glyph(face->glyph, FT_RENDER_MODE_NORMAL);
    FT_Bitmap bitmap = face->glyph->bitmap;
    // Render the bitmap at the current position
    // ...
    x += pos[i].x_advance / 64;
    y += pos[i].y_advance / 64;
}

// Clean up resources
hb_buffer_destroy(buffer);
hb_font_destroy(font);
FT_Done_Face(face);
FT_Done_FreeType(library);
